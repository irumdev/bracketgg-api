stages:
  - dockerize
  - deploy

variables:
  IMAGE_TAG: bracketgg/api-server:latest
  CONTAINER_NAME: api-server
  NGINX_TAG: bracketgg/api-server-nginx:latest
  NGINX_NAME: api-server-nginx
  UPLOAD_MAX_SIZE: 5

dockerize-develop:
  stage: dockerize

  only:
    - develop

  script:
    - docker build --build-arg uploadMaxSize=$UPLOAD_MAX_SIZE -f ./Dockerfile -t $IMAGE_TAG .
    - docker build --build-arg uploadMaxSize=$UPLOAD_MAX_SIZE -f ./nginx/Dockerfile -t $NGINX_TAG .
    - docker image prune -f

  tags:
    - develop

deploy-develop:
  stage: deploy

  only:
    - develop

  script:
      # 컨테이너 강제 종료 및 삭제
    - docker stop $CONTAINER_NAME || true && docker rm $CONTAINER_NAME || true
    - docker run -v /$CONTAINER_NAME/storage:/var/www/storage -v /$CONTAINER_NAME/.env:/var/www/.env -d --network bracketnet --name=$CONTAINER_NAME --restart always $IMAGE_TAG
    - docker stop $NGINX_NAME || true && docker rm $NGINX_NAME || true
    - docker run -d -p 4663:4663 -v /$NGINX_NAME/log/nginx:/var/log/nginx --network bracketnet --name=$NGINX_NAME --restart always $NGINX_TAG
    - docker image prune -f

  tags:
    - develop
